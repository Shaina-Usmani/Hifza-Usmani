import tkinter as tk
import random
import string

class PasswordGenerator:
    def __init__(self, master):
        self.master = master
        self.master.title("Password Generator")

        self.length_label = tk.Label(master, text="Password Length:")
        self.length_label.pack(pady=10)

        self.length_var = tk.IntVar(value=12)  # Default length
        self.length_entry = tk.Entry(master, textvariable=self.length_var)
        self.length_entry.pack(pady=5)

        self.include_uppercase = tk.BooleanVar(value=True)
        self.uppercase_check = tk.Checkbutton(master, text="Include Uppercase Letters", variable=self.include_uppercase)
        self.uppercase_check.pack(pady=5)

        self.include_numbers = tk.BooleanVar(value=True)
        self.numbers_check = tk.Checkbutton(master, text="Include Numbers", variable=self.include_numbers)
        self.numbers_check.pack(pady=5)

        self.include_symbols = tk.BooleanVar(value=True)
        self.symbols_check = tk.Checkbutton(master, text="Include Symbols", variable=self.include_symbols)
        self.symbols_check.pack(pady=5)

        self.generate_button = tk.Button(master, text="Generate Password", command=self.generate_password)
        self.generate_button.pack(pady=10)

        self.password_label = tk.Label(master, text="Generated Password:")
        self.password_label.pack(pady=10)

        self.password_output = tk.Entry(master, width=40)
        self.password_output.pack(pady=5)

    def generate_password(self):
        length = self.length_var.get()
        characters = string.ascii_lowercase  # Always include lowercase letters

        if self.include_uppercase.get():
            characters += string.ascii_uppercase
        if self.include_numbers.get():
            characters += string.digits
        if self.include_symbols.get():
            characters += string.punctuation

        if length <= 0:
            self.password_output.delete(0, tk.END)
            self.password_output.insert(0, "Invalid Length")
            return

        password = ''.join(random.choice(characters) for _ in range(length))
        self.password_output.delete(0, tk.END)
        self.password_output.insert(0, password)

if __name__ == "__main__":
    root = tk.Tk()
    password_generator = PasswordGenerator(root)
    root.mainloop()
